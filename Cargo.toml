[package]
name = "gs-rust"
version = "0.1.0"
authors = ["Shahan Neda <shahan.neda@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
js-sys = "0.3.68"
ply-rs = "0.1.3"
reqwest = { version = "0.11", features = ["blocking", "json"] }
futures-io = { version = "0.2.0-beta" }
wasm-bindgen-futures = "0.4.42"
bytes = "1.5.0"
nalgebra-glm = "0.18.0"
egui = "0.26.2"
getrandom = { version = "0.2", features = ["js"] }
eframe = { version = "0.27.1", default-features = false, features = [
    #"accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    #"persistence",   # Enable restoring app state when restarting the app.
] }



[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"

[profile.dev.package."*"]
opt-level = 2

[patch.crates-io]

[dependencies.web-sys]
version = "0.3.4"
features = [
  'CanvasRenderingContext2d',
  'CssStyleDeclaration',
  'Document',
  'Element',
  'EventTarget',
  'HtmlCanvasElement',
  'HtmlElement',
  'MouseEvent',
  'Node',
  'Window',
  'WebGlBuffer',
  'WebGl2RenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'WebGlUniformLocation',
  'console',
  'Event',
  'MouseEventInit'
]
